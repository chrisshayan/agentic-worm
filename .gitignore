# ==============================================================================
# AGENTIC WORM PROJECT - COMPREHENSIVE .GITIGNORE
# ==============================================================================

# ==============================================================================
# PYTHON
# ==============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==============================================================================
# AI/ML & DATA SCIENCE
# ==============================================================================

# Model files
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.onnx
*.tflite
*.pb
*.pth
*.pt
*.safetensors
*.bin

# Large datasets
*.csv
*.tsv
*.parquet
*.feather
*.hdf
*.xlsx
*.xls
data/raw/
data/processed/
data/external/
!data/raw/.gitkeep
!data/processed/.gitkeep
!data/external/.gitkeep

# ML experiment tracking
mlruns/
.mlflow/
wandb/
tensorboard_logs/
lightning_logs/
artifacts/
checkpoints/
outputs/

# Model outputs
predictions/
results/
experiments/
runs/
logs/

# Weights & Biases
wandb/

# MLflow
mlruns/
mlartifacts/

# TensorBoard
*.tfevents.*

# ==============================================================================
# OPENWORM & BIOLOGICAL SIMULATION
# ==============================================================================

# OpenWorm simulation outputs
simulation_outputs/
*.sim
*.worm
*.c302
*.nml
*.xml
*.sbml

# Geppetto files
*.gep
*.json.gz
geppetto_outputs/

# Sibernetic simulation files
sibernetic_output/
*.sph
*.particles

# Neural network simulation files
neuron_output/
*.dat
*.csv
*.hoc
*.mod
*.dll
*.o

# Mesh and geometry files
*.mesh
*.obj
*.stl
*.ply
*.vtk

# ==============================================================================
# DOCKER & CONTAINERIZATION
# ==============================================================================

# Docker
.dockerignore
docker-compose.override.yml
.docker/
docker/volumes/

# Kubernetes
*.kubeconfig
k8s-secrets/

# ==============================================================================
# DEVELOPMENT TOOLS & IDEs
# ==============================================================================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~
.netrwhist

# Emacs
*~
\#*\#
.\#*

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# ==============================================================================
# DATABASES
# ==============================================================================

# SQLite
*.db
*.sqlite
*.sqlite3
*.db-journal
*.db-wal
*.db-shm

# Redis
dump.rdb

# Neo4j
neo4j/

# ==============================================================================
# CONFIGURATION & SECRETS
# ==============================================================================

# Environment files
.env
.env.local
.env.development
.env.test
.env.production
.env.staging

# API keys and secrets
secrets/
*.key
*.pem
*.cert
*.crt
config/secrets.yaml
config/local.yaml

# Configuration overrides
config/local/
local.config.json

# ==============================================================================
# CLOUD & INFRASTRUCTURE
# ==============================================================================

# AWS
.aws/
*.pem

# Google Cloud
.gcloud/
*.json
!**/gcloud-service-account-template.json

# Azure
.azure/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# ==============================================================================
# OPERATING SYSTEM
# ==============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ==============================================================================
# MONITORING & LOGGING
# ==============================================================================

# Logs
*.log
logs/
log/
*.log.*

# Monitoring
monitoring/data/
prometheus/data/
grafana/data/

# ==============================================================================
# TEMPORARY & CACHE FILES
# ==============================================================================

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.old

# Cache directories
.cache/
cache/
__pycache__/

# Ruff
.ruff_cache/

# ==============================================================================
# PROJECT-SPECIFIC
# ==============================================================================

# Simulation recordings
recordings/
screenshots/
videos/

# Experiment outputs
experiment_results/
analysis_outputs/

# Documentation builds
docs/build/
docs/_build/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Benchmarks
benchmark_results/
performance_logs/

# ==============================================================================
# KEEP FILES (to maintain directory structure)
# ==============================================================================

# Keep empty directories with .gitkeep files
!.gitkeep
!*/.gitkeep
